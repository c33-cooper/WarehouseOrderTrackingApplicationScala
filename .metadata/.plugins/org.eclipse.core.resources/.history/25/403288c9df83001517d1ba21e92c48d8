import java.sql.Statement
import java.sql.ResultSet

/**
 * @author callum
 */
class Order(app : WarehouseOrderTrackingApplication) {
  
  /**
   * Overload constructor
   */
  def this() = this(new WarehouseOrderTrackingApplication)
  
  /**
   * Default Class constructor
   */
  def Order() {
  }
  
  /**
   * Establish the orders table
   */
  def establishOrdersFromDatabase() {
    
    // Create database instance & connection
     val db = new Database
     db createConnection
     
     // Establish the orders
     try{
           // Create the sql attributes
           val stmt : Statement = db.getDBConnection().createStatement()
           
           // SQL attributes
           val sql1 : String = """SELECT idorders, orderDateCreated,
           orderVerified, orderTotal, productQuantity, orderStatus 
           FROM orders"""
           var rs : ResultSet = stmt.executeQuery(sql1)
           
           // Loop through database elements
           while (rs next) {
             
             // Store database elements into attributes
              val orderID : String = rs.getString("idorders")
              val orderDateCreated : String = rs.getString("orderDateCreated")
              val orderVerified : Boolean = rs.getBoolean("orderVerified")
              val orderTotals : Double = rs.getDouble("orderTotal")
              val productQuantity : Int = rs.getInt("productQuantity")
              val orderStatus : String = rs.getString("orderStatus")
              
              // Print orders
              println("Order ID: " + orderID
                      + "\nOrder Date Created: " + orderDateCreated
                      + "\nOrder Verified: " + orderVerified
                      + "\nOrder Total: " + orderTotals + " GBP"
                      + "\nProduct Quantity: " + productQuantity 
                      + "\nOrder Status: " + orderStatus + "\n")
           }
           // Close the connection
           rs close
     }
      catch {
        case e => e.printStackTrace
      }
   }
  
  /**
   * Prompt user to select order to view
   */
  def selectOrderToView() {
      
      // Create database instance & connection
       val db = new Database
       db createConnection
    
      //Re-initialise the orderline instance
      val orderLine = new OrderLine
      
      // Prompt the user for the order to select and view
      println("ENTER ORDER TO SELECT: ")
      var orderSelector : String = readLine
      
      // Run check of order select against the order ID
      println("\nCURRENT SELECTED ORDER...")
      
      try{
            // Create a new connection to the database 
            val stmt : Statement = db.getDBConnection().createStatement()
            
            // SQL attributes
            val sql2 : String = """SELECT idorders, orderDateCreated,
            orderVerified, orderTotal, productQuantity 
            FROM orders WHERE idorders = """ + orderSelector
            
            // log database into result set
            var rsSelectedOrder : ResultSet = stmt.executeQuery(sql2)
      }
  }
}