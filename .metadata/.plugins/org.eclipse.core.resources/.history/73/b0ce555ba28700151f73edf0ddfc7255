/*
* Population.java
* Manages a population of candidate routes
*/

public class Population {

    // Holds population of routes
    Route[] routes;

    // Construct a population
    public Population(int populationSize, boolean initialise) {
        routes = new Route[populationSize];
        // If we need to initialise a population of routes do so
        if (initialise) {
            // Loop and create individuals
            for (int i = 0; i < populationSize(); i++) {
                Route newRoute = new Route();
                newRoute.generateIndividual();
                saveRoute(i, newRoute);
            }
        }
    }
    
    // Saves a route
    public void saveRoute(int index, Route route) {
        routes[index] = route;
    }
    
    // Gets a tour from population
    public Tour getTour(int index) {
        return tours[index];
    }

    // Gets the best tour in the population
    public Tour getFittest() {
        Tour fittest = tours[0];
        // Loop through individuals to find fittest
        for (int i = 1; i < populationSize(); i++) {
            if (fittest.getFitness() <= getTour(i).getFitness()) {
                fittest = getTour(i);
            }
        }
        return fittest;
    }

    // Gets population size
    public int populationSize() {
        return tours.length;
    }
}
